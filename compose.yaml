version: "3.9"

services:
  hr_api:
    image: mmirvaliyev/hr_service_api:latest  # 🧩 Change to your actual image name or build locally
    platform: linux/amd64
    build:
      context: .
      dockerfile: HR_Service/Dockerfile
    ports:
      - "8080:8080" # expose port 8080 to access via browser
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=db;Port=5432;Database=hr_service_db;User Id=postgres;Password=${POSTGRES_PASSWORD}
      - JWT__Key=${JWT_KEY}
      - JWT__Issuer=HrService
      - JWT__Audience=HrServiceUsers
    depends_on:
      db:
        condition: service_healthy
    networks:
      - hr-network
    restart: unless-stopped

  db:
    image: postgres:17-alpine
    container_name: hr-service-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=hr_service_db
    ports:
      - "5433:5432"
    volumes:
      - hr-postgresql-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - hr-network

networks:
  hr-network:
    driver: bridge

volumes:
  hr-postgresql-data:
